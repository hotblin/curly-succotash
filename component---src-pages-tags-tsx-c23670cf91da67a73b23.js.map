{"version":3,"sources":["webpack:///./src/pages/tags.tsx","webpack:///./src/components/base/Position.tsx","webpack:///./src/components/base/NoData.tsx","webpack:///./src/components/Main.tsx","webpack:///./src/components/Main.module.scss"],"names":["TagsPage","render","tags","this","props","data","react__WEBPACK_IMPORTED_MODULE_1__","_containers_LayoutContainer__WEBPACK_IMPORTED_MODULE_3__","headerType","HeaderType","AUTHOR_HEADER","_components_base_Position__WEBPACK_IMPORTED_MODULE_5__","title","_components_Main__WEBPACK_IMPORTED_MODULE_6__","group","_components_TagsCard__WEBPACK_IMPORTED_MODULE_7__","tagSize","map","tag","name","fieldValue","count","totalCount","Link","_components_base_NoData__WEBPACK_IMPORTED_MODULE_8__","React","pageQuery","Position","_this","dProps","Object","assign","react__WEBPACK_IMPORTED_MODULE_4__","gatsby__WEBPACK_IMPORTED_MODULE_5__","query","react_helmet__WEBPACK_IMPORTED_MODULE_3__","site","siteMetadata","_public_static_d_2341529547_json__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","__webpack_exports__","style","textAlign","margin","tProps","className","classnames","classes","extra","position","module","exports","mainRoot"],"mappings":"oQAmBqBA,4FACnBC,OAAA,WAAS,IACCC,EAASC,KAAKC,MAAMC,KAApBH,KACR,OACEI,EAAA,cAACC,EAAA,EAAD,CAAYC,WAAYC,IAAWC,eACjCJ,EAAA,cAACK,EAAA,EAAD,CAAUC,MAAM,QAChBN,EAAA,cAACO,EAAA,EAAD,KACGX,EAAKY,MACJR,EAAA,cAACS,EAAA,EAAD,CACEC,QAAQ,QACRd,KAAMA,EAAKY,MAAMG,IAAI,SAAAC,GAAG,MAAK,CAC3BC,KAAMD,EAAIE,WACVC,MAAOH,EAAII,cAEbC,KAAMA,SAGRjB,EAAA,cAACkB,EAAA,EAAD,YAjB0BC,aAyBzBC,EAAS,wICvCDC,4FACnB1B,OAAA,WAAS,IAAA2B,EAAAzB,KACD0B,EAAMC,OAAAC,OAAA,GAAQ5B,KAAKC,OAEzB,cADOyB,EAAOjB,MAEZoB,EAAA,cAACC,EAAA,YAAD,CACEC,MAAK,aASLjC,OAAQ,SAACI,GAAD,OACN2B,EAAA,cAACG,EAAA,OAADL,OAAAC,OAAA,CACEnB,MACEgB,EAAKxB,MAAMQ,MAAWgB,EAAKxB,MAAMQ,MAAjC,MAA4CP,EAAK+B,KAAKC,aAAazB,MAAUP,EAAK+B,KAAKC,aAAazB,OAElGiB,KAfVxB,KAAAiC,QALgCb,2HCLtC,IAAAc,EAAAC,EAAA,GAEeC,EAAA,oBACbF,EAAA,yBACEA,EAAA,oBAAIG,MAAO,CAAEC,UAAW,SAAUC,OAAQ,MAA1C,4FCDWH,EAAA,WACbrC,GAIA,IAAMyC,EAAMf,OAAAC,OAAA,GACP3B,EADO,CAEV0C,UAAWC,IAAWC,WAAkB5C,EAAM0C,aAGhD,cADOD,EAAOI,MAEZ3C,EAAA,qBACEoC,MAAO,CACLQ,SAAU,aAGZ5C,EAAA,qBAAUuC,GACTzC,EAAM6C,6BCnBbE,EAAAC,QAAA,CAAkBC,SAAA","file":"component---src-pages-tags-tsx-c23670cf91da67a73b23.js","sourcesContent":["import * as React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport { WithLayout } from '../containers/LayoutContainer'\nimport { HeaderType } from '../contants/header'\nimport Position from '../components/base/Position'\nimport Main from '../components/Main'\nimport TagsCard from '../components/TagsCard'\nimport NoData from '../components/base/NoData'\nexport interface TagsPageProps {\n  data: {\n    tags: {\n      group: Array<{\n        fieldValue: string\n        totalCount: number\n      }>\n    }\n  }\n}\n\nexport default class TagsPage extends React.Component<TagsPageProps> {\n  render() {\n    const { tags } = this.props.data\n    return (\n      <WithLayout headerType={HeaderType.AUTHOR_HEADER}>\n        <Position title=\"标签云\" />\n        <Main>\n          {tags.group ? (\n            <TagsCard\n              tagSize=\"large\"\n              tags={tags.group.map(tag => ({\n                name: tag.fieldValue,\n                count: tag.totalCount,\n              }))}\n              Link={Link}\n            />\n          ) : (\n            <NoData />\n          )}\n        </Main>\n      </WithLayout>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  {\n    tags: allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___updatedDate] }\n      filter: { frontmatter: { draft: { ne: true } }, fileAbsolutePath: { regex: \"/blog/\" } }\n    ) {\n      group(field: frontmatter___tags, limit: 3) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n","import { Helmet, HelmetProps } from 'react-helmet'\nimport * as React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Query } from '../../graphql-types'\n\nexport default class Position extends React.Component<HelmetProps> {\n  render() {\n    const dProps = { ...this.props }\n    delete dProps.title\n    return (\n      <StaticQuery\n        query={graphql`\n          query PositionQuery {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n          }\n        `}\n        render={(data: Query) => (\n          <Helmet\n            title={\n              this.props.title ? `${this.props.title} - ${data.site.siteMetadata.title}` : data.site.siteMetadata.title\n            }\n            {...dProps}\n          />\n        )}\n      />\n    )\n  }\n}\n","import * as React from 'react'\n\nexport default () => (\n  <div>\n    <h1 style={{ textAlign: 'center', margin: 100 }}>没有鸡，哪来的蛋呢</h1>\n  </div>\n)\n","import * as React from 'react'\nimport * as classes from './Main.module.scss'\nimport classnames from 'classnames'\nexport default (\n  props: React.HTMLProps<HTMLMainElement> & {\n    extra?: React.ReactElement<any>\n  }\n) => {\n  const tProps = {\n    ...props,\n    className: classnames(classes.mainRoot, props.className),\n  }\n  delete tProps.extra\n  return (\n    <div\n      style={{\n        position: 'relative',\n      }}\n    >\n      <main {...tProps} />\n      {props.extra}\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainRoot\":\"Main-module--mainRoot--2flIs\"};"],"sourceRoot":""}