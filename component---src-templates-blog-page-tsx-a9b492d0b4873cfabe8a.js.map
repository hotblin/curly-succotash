{"version":3,"sources":["webpack:///./src/templates/blog-page.tsx","webpack:///./src/components/base/Position.tsx","webpack:///./src/components/base/NoData.tsx","webpack:///./src/components/PostItem.module.scss","webpack:///./src/containers/blog.module.scss","webpack:///./node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./node_modules/core-js/modules/es6.regexp.flags.js","webpack:///./node_modules/core-js/modules/es6.string.starts-with.js","webpack:///./src/components/PostItem.tsx","webpack:///./src/components/Pagination.tsx","webpack:///./src/containers/BlogContainer.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","_containers_BlogContainer__WEBPACK_IMPORTED_MODULE_1__","_containers_LayoutContainer__WEBPACK_IMPORTED_MODULE_2__","_contants_header__WEBPACK_IMPORTED_MODULE_3__","props","headerType","HeaderType","AUTHOR_HEADER","Position","render","_this","this","dProps","Object","assign","title","react__WEBPACK_IMPORTED_MODULE_4__","gatsby__WEBPACK_IMPORTED_MODULE_5__","query","data","react_helmet__WEBPACK_IMPORTED_MODULE_3__","site","siteMetadata","_public_static_d_2341529547_json__WEBPACK_IMPORTED_MODULE_2__","React","style","textAlign","margin","module","exports","postItem","itemElse","timeLabel","itemMain","cover","firstChild","here","indexContent","anObject","$flags","DESCRIPTORS","$toString","define","fn","RegExp","prototype","call","source","flags","R","concat","undefined","name","f","configurable","get","$export","toLength","context","$startsWith","P","F","startsWith","searchString","that","index","Math","min","arguments","length","search","String","slice","PostItem","updatedDate","href","excerpt","timeToRead","words","origin","react","className","classes","gatsby_browser_entry","to","TagsCard","Link","tags","dangerouslySetInnerHTML","__html","components_Pagination","pageCount","activeItem","pathname","split","activeClassName","times","pageIndex","toString","rangeStep","key","cursor","BlogPage","posts","ceil","totalCount","location","edges","map","_ref","node","frontmatter","slug","fields","wordCount","NoData"],"mappings":"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","file":"component---src-templates-blog-page-tsx-a9b492d0b4873cfabe8a.js","sourcesContent":["import * as React from 'react'\nimport Blog, { IndexProps } from '../containers/BlogContainer'\nimport { graphql } from 'gatsby'\nimport { WithLayout } from '../containers/LayoutContainer'\nimport { HeaderType } from '../contants/header'\n\nexport default (props: IndexProps) => (\n  <WithLayout headerType={HeaderType.AUTHOR_HEADER}>\n    <Blog {...props} />\n  </WithLayout>\n)\n\nexport const pageQuery = graphql`\n  query TemplateBlogPage($skip: Int) {\n    # Get tags\n    tags: allMarkdownRemark(filter: { frontmatter: { draft: { ne: true } } }) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n\n    # Get posts\n    posts: allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___updatedDate] }\n      filter: { frontmatter: { draft: { ne: true } }, fileAbsolutePath: { regex: \"/blog/\" } }\n      limit: 10\n      skip: $skip\n    ) {\n      totalCount\n      edges {\n        node {\n          wordCount {\n            words\n          }\n          excerpt\n          timeToRead\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            updatedDate(formatString: \"YYYY年MM月DD日\")\n            tags\n            origin\n            image {\n              children {\n                ... on ImageSharp {\n                  fixed(width: 680, height: 440) {\n                    src\n                    srcSet\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    dataJson {\n      author {\n        avatar {\n          children {\n            ... on ImageSharp {\n              fixed(width: 35, height: 35) {\n                src\n                srcSet\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import { Helmet, HelmetProps } from 'react-helmet'\nimport * as React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Query } from '../../graphql-types'\n\nexport default class Position extends React.Component<HelmetProps> {\n  render() {\n    const dProps = { ...this.props }\n    delete dProps.title\n    return (\n      <StaticQuery\n        query={graphql`\n          query PositionQuery {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n          }\n        `}\n        render={(data: Query) => (\n          <Helmet\n            title={\n              this.props.title ? `${this.props.title} - ${data.site.siteMetadata.title}` : data.site.siteMetadata.title\n            }\n            {...dProps}\n          />\n        )}\n      />\n    )\n  }\n}\n","import * as React from 'react'\n\nexport default () => (\n  <div>\n    <h1 style={{ textAlign: 'center', margin: 100 }}>没有鸡，哪来的蛋呢</h1>\n  </div>\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postItem\":\"PostItem-module--postItem--2muIs\",\"itemElse\":\"PostItem-module--itemElse--175Uv\",\"timeLabel\":\"PostItem-module--timeLabel--3j1tg\",\"itemMain\":\"PostItem-module--itemMain--1RZNb\",\"cover\":\"PostItem-module--cover--bV-iP\",\"firstChild\":\"PostItem-module--first-child--3pGfQ\",\"here\":\"PostItem-module--here--_jZwl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"indexContent\":\"blog-module--indexContent--JWfzm\"};","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n","// 21.1.3.18 String.prototype.startsWith(searchString [, position ])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = context(this, searchString, STARTS_WITH);\n    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n","import * as React from 'react'\nimport { Link } from 'gatsby'\nimport { ImageSharpFixed } from '../graphql-types'\nimport * as classes from './PostItem.module.scss'\nimport TagsCard, { TagsCardProps } from './TagsCard'\nexport interface PostItemProps extends TagsCardProps {\n  cover: ImageSharpFixed\n  title: string\n  updatedDate: Date\n  href: string\n  excerpt: string\n  timeToRead: number\n  words: number\n  origin: boolean\n}\n\nexport default (props: PostItemProps) => {\n  const { cover, title, updatedDate, href, excerpt, timeToRead, words, origin } = props\n  return (\n    <div className={classes.postItem}>\n      <div className={classes.timeLabel}>\n        <p>{updatedDate}</p>\n      </div>\n      <div className={classes.itemMain}>\n        <div className={classes.cover}>\n          <Link to={href}>\n            <img {...cover} />\n          </Link>\n        </div>\n        <div className={classes.itemElse}>\n          <TagsCard Link={Link} tags={props.tags} origin={origin} />\n          <h3>\n            <Link to={href}>{title}</Link>\n          </h3>\n          <p dangerouslySetInnerHTML={{ __html: excerpt }} />\n          <p className={classes.here}>\n            共{words}字-大约需要阅读{timeToRead}min\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { GatsbyLinkProps, Link } from 'gatsby'\nimport { times } from 'lodash'\nimport './Pagination.scss'\n\ninterface PaginationProps extends React.HTMLProps<HTMLDivElement> {\n  pathname: string\n  Link: React.ComponentClass<GatsbyLinkProps<any>>\n  pageCount: number\n}\n\nexport default (props: PaginationProps) => {\n  const { pageCount } = props\n  if (pageCount === 1) {\n    return null\n  }\n  const activeItem = props.pathname.startsWith('/blog/page') ? props.pathname.split('/')[3] : '1'\n\n  return (\n    <div className=\"pagination\">\n      {1 === +activeItem ? null : (\n        <props.Link\n          to={+activeItem === 2 ? '/' : `/blog/page/${+activeItem - 1}/`}\n          activeClassName={'active'}\n          title=\"上一页\"\n        >\n          {'<'}\n        </props.Link>\n      )}\n      {times(pageCount, index => {\n        const pageIndex = (index + 1).toString()\n        const rangeStep = pageCount < 10 ? 5 : 3\n        const isInRange = +pageIndex - rangeStep < +activeItem && +activeItem && +pageIndex + rangeStep > +activeItem\n        const isLastPage = +pageIndex === pageCount\n        const isFirstPage = +pageIndex === 1\n        if (isInRange || isFirstPage || isLastPage) {\n          return (\n            <props.Link\n              key={pageIndex}\n              style={{ cursor: 'pointer' }}\n              to={+pageIndex === 1 ? '/' : `/blog/page/${pageIndex}/`}\n              activeClassName={'active'}\n            >\n              {pageIndex}\n            </props.Link>\n          )\n        } else {\n          return +pageIndex === props.pageCount - 1 || +pageIndex === 2 ? <span>...</span> : null\n        }\n      })}\n      {pageCount === +activeItem ? null : (\n        <props.Link to={`/blog/page/${+activeItem + 1}/`} activeClassName={'active'} title=\"下一页\">\n          {'>'}\n        </props.Link>\n      )}\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { Link } from 'gatsby'\nimport { get } from 'lodash'\nimport PostItem from '../components/PostItem'\nimport { MarkdownRemark, MarkdownRemarkConnection } from '../graphql-types'\nimport * as classes from './blog.module.scss'\nimport Position from '../components/base/Position'\nimport BlogPagination from '../components/Pagination'\nimport NoData from '../components/base/NoData'\nexport interface IndexProps {\n  data: {\n    posts: MarkdownRemarkConnection\n  }\n  location: {\n    pathname: string\n  }\n}\n\nconst BlogPage = (props: IndexProps) => {\n  const { data } = props\n  if (!data.posts) {\n    return <NoData />\n  } else {\n    const pageCount = Math.ceil(data.posts.totalCount / 10)\n    const { pathname } = props.location\n\n    return (\n      <div className={classes.indexContent}>\n        <Position />\n        <div className={classes.middleLine} />\n        {data.posts.edges.map(({ node }: { node: MarkdownRemark }) => {\n          const {\n            frontmatter,\n            timeToRead,\n            fields: { slug },\n            excerpt,\n            wordCount,\n          } = node\n          const cover = get(frontmatter, 'image.children.0.fixed', {})\n          const tags = node.frontmatter.tags\n          return (\n            <PostItem\n              words={wordCount.words}\n              key={slug}\n              cover={cover}\n              title={frontmatter.title}\n              origin={frontmatter.origin}\n              timeToRead={timeToRead}\n              updatedDate={frontmatter.updatedDate}\n              href={slug}\n              excerpt={excerpt}\n              Link={Link}\n              tags={tags}\n            />\n          )\n        })}\n        <BlogPagination Link={Link} pathname={pathname} pageCount={pageCount} />\n      </div>\n    )\n  }\n}\nexport default BlogPage\n"],"sourceRoot":""}