{"version":3,"sources":["webpack:///./src/components/base/Affix.tsx","webpack:///./src/utils/getViewPortSize.ts","webpack:///./src/components/MarkNav.tsx","webpack:///./src/components/BlogPost.tsx","webpack:///./src/templates/blog-post.tsx","webpack:///./src/components/base/Position.tsx","webpack:///./src/components/Main.tsx","webpack:///./src/components/Main.module.scss","webpack:///./src/components/BlogPost.module.scss"],"names":["Affix","props","_this","_React$PureComponent","call","this","affix","handleResize","throttle","updatePin","setWidth","handleScroll","state","position","width","placeHoldStyle","active","getStyles","_this$props","zIndex","offsetBottom","offsetTop","_this$state","bottom","top","pin","onPin","setState","unpin","onUnpin","overflow","element","ReactDOM","offsetWidth","height","offsetHeight","readllyNum","propsNum","doc","undefined","document","documentElement","Math","max","clientWidth","window","innerWidth","clientHeight","innerHeight","getBoundingClientRect","render","_classnames","_this$props2","prefix","className","placeHoldClassName","wrapClass","classnames","react","style","Object","assign","children","WindowEventHandler","eventName","callback","React","withDefaultProps","slugs","require","handleMaoClick","hash","e","preventDefault","scrollTo","MarkNav","_React$Component","updateScroll","scrollHeadings","currentListNo","mapNav","componentDidMount","_this2","headings","map","heading","key","mapHeading","value","h","querySelector","mao","el","actualTop","current","offsetParent","getElementTop","onclick","showValue","scrollTop","pageYOffset","body","last","i","length","index","depth","href","onClick","nativeEvent","slug","ordered","BlogPost","div","createElement","Gitment","id","commentOptions","getElementById","replaceWith","componentWillUnmount","remove","_this$props$post","post","html","title","frontmatter","Main","classes","Position","dangerouslySetInnerHTML","__html","components_base_Affix","src_components_MarkNav","PostPage","_props$data","data","dataJson","recents","edges","_ref","node","get","fields","gitmentOptions","gitment","LayoutContainer","headerType","HeaderType","POST_HEADER","image","components_BlogPost","pageQuery","dProps","react__WEBPACK_IMPORTED_MODULE_4__","gatsby__WEBPACK_IMPORTED_MODULE_5__","query","react_helmet__WEBPACK_IMPORTED_MODULE_3__","site","siteMetadata","_public_static_d_2341529547_json__WEBPACK_IMPORTED_MODULE_2__","__webpack_exports__","tProps","extra","react__WEBPACK_IMPORTED_MODULE_1__","module","exports","mainRoot","rightNav"],"mappings":"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","file":"component---src-templates-blog-post-tsx-c01b315eae86fb5ddb43.js","sourcesContent":["import * as React from 'react'\nimport classnames from 'classnames'\nimport * as ReactDOM from 'react-dom'\nimport WindowEventHandler from './WindowEventHandler'\nimport getViewPortSize from '../../utils/getViewPortSize'\nimport { withDefaultProps } from '../../utils/props'\nimport { throttle } from 'lodash'\nimport './Affix.scss'\n\nexport interface AffixProps {\n  placeHoldClassName?: string\n  className?: string\n  prefix?: string\n  zIndex?: number\n  offsetTop?: number\n  offsetBottom?: number\n  onPin?(): void\n  onUnpin?(): void\n}\n\ninterface WrapStyles {\n  zIndex?: number\n  width?: number\n  position: AffixPosition\n  bottom?: number\n  top?: number\n}\n\ntype AffixPosition = 'static' | 'fixed'\n\ninterface AffixState {\n  position: AffixPosition\n  width: number\n  placeHoldStyle: object\n  active: boolean\n}\n\nclass Affix extends React.PureComponent<AffixProps, AffixState> {\n  affix = false\n  handleResize = throttle(() => {\n    this.updatePin()\n    this.setWidth()\n  }, 20)\n\n  handleScroll = throttle(() => {\n    this.updatePin()\n  }, 20)\n  constructor(props: AffixProps) {\n    super(props)\n    this.state = {\n      position: 'static',\n      width: null,\n      placeHoldStyle: {},\n      active: false,\n    }\n  }\n\n  getStyles(): WrapStyles {\n    const { zIndex, offsetBottom, offsetTop } = this.props\n    const { position, width } = this.state\n    if (position === 'fixed') {\n      return {\n        position,\n        zIndex,\n        width,\n        bottom: offsetBottom,\n        top: offsetTop,\n      }\n    }\n    return {\n      position,\n    }\n  }\n\n  pin() {\n    const { onPin } = this.props\n    this.affix = true\n    this.setWidth()\n    this.setState({\n      position: 'fixed',\n      active: true,\n    })\n    if (onPin) {\n      onPin()\n    }\n  }\n\n  unpin() {\n    const { onUnpin } = this.props\n    this.affix = false\n    this.setState({\n      position: 'static',\n      width: null,\n      placeHoldStyle: { overflow: 'hidden' },\n      active: false,\n    })\n    if (onUnpin) {\n      onUnpin()\n    }\n  }\n\n  setWidth() {\n    const element = ReactDOM.findDOMNode(this) as HTMLElement\n    this.setState({\n      width: element.offsetWidth,\n      placeHoldStyle: {\n        width: '100%',\n        height: element.offsetHeight,\n      },\n    })\n  }\n\n  updatePin() {\n    const affix = this.affix\n    const props = this.props\n    const element = ReactDOM.findDOMNode(this) as HTMLElement\n    let readllyNum\n    let propsNum\n    if (props.offsetBottom !== undefined) {\n      readllyNum = getViewPortSize().height - element.getBoundingClientRect().bottom\n      propsNum = props.offsetBottom\n    } else {\n      readllyNum = element.getBoundingClientRect().top\n      propsNum = props.offsetTop\n    }\n    if (affix && readllyNum > propsNum) {\n      this.unpin()\n    }\n    if (!affix && readllyNum <= propsNum) {\n      this.pin()\n    }\n  }\n\n  render() {\n    const { prefix, className, placeHoldClassName } = this.props\n    const wrapClass = classnames(\n      `${prefix}-affix`,\n      {\n        [`${prefix}-affix-active`]: this.state.active,\n      },\n      className\n    )\n    return (\n      <div className={placeHoldClassName} style={this.state.placeHoldStyle}>\n        <div className={wrapClass} style={{ ...this.getStyles() }}>\n          {this.props.children}\n        </div>\n        <WindowEventHandler eventName=\"scroll\" callback={this.handleScroll} />\n        <WindowEventHandler eventName=\"resize\" callback={this.handleResize} />\n      </div>\n    )\n  }\n}\n\nexport default withDefaultProps(\n  {\n    offsetTop: 0,\n    prefix: 'curly',\n    zIndex: 1000,\n  },\n  Affix\n)\n","export default function getViewPortSize() {\n  const doc = document.documentElement\n  return {\n    width: Math.max(doc.clientWidth, window.innerWidth || 0),\n    height: Math.max(doc.clientHeight, window.innerHeight || 0),\n  }\n}\n","import * as React from 'react'\nimport { MarkdownHeading } from '../graphql-types'\nimport { withDefaultProps } from '../utils/props'\nimport WindowEventHandler from './base/WindowEventHandler'\nimport classnames from 'classnames'\nimport './MarkNav.scss'\nimport { throttle } from 'lodash'\nconst slugs = require(`github-slugger`)\nexport interface MarkNavProps {\n  headings: MarkdownHeading[]\n  ordered: boolean\n  className: string\n}\n\ninterface MarkNavState {\n  currentListNo: string\n  scrollHeadings: ScrollHeading[]\n}\n\ninterface ScrollHeading extends MarkdownHeading {\n  top: number\n  active: boolean\n  showValue: string\n}\n\nfunction getElementTop(el: HTMLElement): number {\n  let actualTop = el.offsetTop\n\n  let current = el.offsetParent as HTMLElement\n\n  while (current !== null) {\n    actualTop += current.offsetTop\n\n    current = current.offsetParent as HTMLElement\n  }\n\n  return actualTop\n}\n\nconst handleMaoClick = (top: number, hash: string) => (e: MouseEvent) => {\n  e.preventDefault()\n  window.scrollTo({\n    top: top + 1,\n  })\n}\n\nclass MarkNav extends React.Component<MarkNavProps, MarkNavState> {\n  private handleScroll = throttle(() => {\n    this.updateScroll(this.state.scrollHeadings)\n  }, 20)\n\n  constructor(props: MarkNavProps) {\n    super(props)\n    this.state = {\n      currentListNo: '',\n      scrollHeadings: [],\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"mark-nav\">\n        {this.mapNav(this.state.scrollHeadings)}\n        <WindowEventHandler eventName={'scroll'} callback={this.handleScroll} />\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    let scrollHeadings = this.props.headings.map(heading => {\n      const key = this.mapHeading(heading.value)\n      let h = document.querySelector(`[data-id=${key}]`) as HTMLElement\n      if (h) {\n        let mao = h.querySelector('a.anchor') as HTMLAnchorElement\n        let top = getElementTop(h)\n        mao.onclick = handleMaoClick(top, key)\n        return {\n          ...heading,\n          top,\n          active: false,\n          showValue: key,\n        }\n      }\n      return {\n        ...heading,\n        top: 0,\n        active: false,\n        showValue: key,\n      }\n    })\n    this.updateScroll(scrollHeadings)\n  }\n\n  private updateScroll(scrollHeadings: ScrollHeading[]) {\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0\n    let last = 0\n    let active = false\n    for (let i = 0; i < scrollHeadings.length; i++) {\n      scrollHeadings[i].active = false\n      if (!active && scrollHeadings[i].top >= scrollTop) {\n        scrollHeadings[last].active = true\n        active = true\n      }\n      last = i\n    }\n    if (!active) {\n      scrollHeadings[last].active = true\n    }\n    this.setState({\n      scrollHeadings,\n    })\n  }\n  private mapNav(headings: ScrollHeading[]): Object[] {\n    return headings.map((heading, index) => (\n      <a\n        key={index}\n        className={classnames('head-nav-item', `nav-item-${heading.depth}`, { active: heading.active })}\n        href={`#${heading.showValue}`}\n        onClick={e => handleMaoClick(heading.top, heading.showValue)(e.nativeEvent)}\n      >\n        {heading.value}\n      </a>\n    ))\n  }\n  private mapHeading(heading: string): string {\n    return slugs().slug(heading, false)\n  }\n}\n\nexport default withDefaultProps(\n  {\n    ordered: false,\n    className: '',\n  },\n  MarkNav\n)\n","import * as React from 'react'\nimport Gitment from 'gitment'\nimport 'gitment/style/default.css'\nimport { gitment_2, MarkdownRemark } from '../graphql-types'\nimport * as classes from './BlogPost.module.scss'\nimport Affix from './base/Affix'\nimport MarkNav from './MarkNav'\nimport Position from './base/Position'\nimport Main from './Main'\nimport ReactMedia from 'react-media'\nexport interface BlogPostProps {\n  slug: string\n  commentOptions: gitment_2\n  post: MarkdownRemark\n}\n\nclass BlogPost extends React.Component<BlogPostProps> {\n  div: HTMLDivElement = null\n  componentDidMount() {\n    this.div = document.createElement('div')\n    let gitment = new Gitment({\n      id: this.props.slug,\n      ...this.props.commentOptions,\n    })\n    gitment.render(this.div)\n    document.getElementById('comment-container').replaceWith(this.div)\n  }\n  componentWillUnmount() {\n    if (this.div) {\n      this.div.remove()\n    }\n  }\n  render() {\n    const { html, headings } = this.props.post\n    const { title } = this.props.post.frontmatter\n    return (\n      <Main>\n        <div className={classes.post}>\n          <Position title={`${title}`} />\n\n          <div className={classes.postContent} dangerouslySetInnerHTML={{ __html: html }} />\n          <div className={classes.rightNav}>\n            <Affix>\n              <MarkNav headings={headings} />\n            </Affix>\n          </div>\n          <div id=\"comment-container\" />\n        </div>\n      </Main>\n    )\n  }\n}\n\nexport default BlogPost\n","import * as React from 'react'\nimport { LayoutProps } from '../components/Layout'\nimport { MarkdownRemark, MarkdownRemarkConnection, Site, DataJson, ImageSharp } from '../graphql-types'\nimport { get } from 'lodash'\nimport { WithLayout } from '../containers/LayoutContainer'\nimport BlogPost from '../components/BlogPost'\nimport { graphql } from 'gatsby'\nimport { HeaderType } from '../contants/header'\ninterface BlogPostProps extends LayoutProps {\n  data: {\n    post: MarkdownRemark\n    recents: MarkdownRemarkConnection\n    site: Site\n    dataJson: DataJson\n  }\n}\nconst PostPage = (props: BlogPostProps) => {\n  const { post, dataJson } = props.data\n  const recents = props.data.recents.edges.map(({ node }) => {\n    const recentCover = get(node, 'frontmatter.image.children.0.fixed', {})\n  })\n  const { slug } = post.fields\n  const gitmentOptions = dataJson.gitment\n  return (\n    <WithLayout\n      headerType={HeaderType.POST_HEADER}\n      data={{\n        ...post.frontmatter,\n        image: post.frontmatter.image ? (post.frontmatter.image.children[0] as ImageSharp) : null,\n      }}\n    >\n      <BlogPost slug={slug} commentOptions={gitmentOptions} post={post} />\n    </WithLayout>\n  )\n}\n\nexport default PostPage\n\nexport const pageQuery = graphql`\n  query TemplateBlogPost($slug: String!) {\n    dataJson {\n      gitment {\n        owner\n        repo\n        oauth {\n          client_id\n          client_secret\n        }\n      }\n    }\n    post: markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      # 摘要\n      excerpt\n      timeToRead\n      fields {\n        slug\n      }\n      headings {\n        value\n        depth\n      }\n      frontmatter {\n        title\n        tags\n        origin\n        updatedDate(formatString: \"YYYY年MM月DD日\")\n        image {\n          children {\n            ... on ImageSharp {\n              fixed(width: 720, quality: 100) {\n                src\n                srcSet\n              }\n            }\n          }\n        }\n      }\n    }\n    recents: allMarkdownRemark(\n      filter: {\n        fields: { slug: { ne: $slug } }\n        frontmatter: { draft: { ne: true } }\n        fileAbsolutePath: { regex: \"/blog/\" }\n      }\n      sort: { order: DESC, fields: [frontmatter___updatedDate] }\n      limit: 4\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            title\n            image {\n              children {\n                ... on ImageSharp {\n                  fixed(width: 300, height: 100) {\n                    src\n                    srcSet\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import { Helmet, HelmetProps } from 'react-helmet'\nimport * as React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Query } from '../../graphql-types'\n\nexport default class Position extends React.Component<HelmetProps> {\n  render() {\n    const dProps = { ...this.props }\n    delete dProps.title\n    return (\n      <StaticQuery\n        query={graphql`\n          query PositionQuery {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n          }\n        `}\n        render={(data: Query) => (\n          <Helmet\n            title={\n              this.props.title ? `${this.props.title} - ${data.site.siteMetadata.title}` : data.site.siteMetadata.title\n            }\n            {...dProps}\n          />\n        )}\n      />\n    )\n  }\n}\n","import * as React from 'react'\nimport * as classes from './Main.module.scss'\nimport classnames from 'classnames'\nexport default (\n  props: React.HTMLProps<HTMLMainElement> & {\n    extra?: React.ReactElement<any>\n  }\n) => {\n  const tProps = {\n    ...props,\n    className: classnames(classes.mainRoot, props.className),\n  }\n  delete tProps.extra\n  return (\n    <div\n      style={{\n        position: 'relative',\n      }}\n    >\n      <main {...tProps} />\n      {props.extra}\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainRoot\":\"Main-module--mainRoot--2flIs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"BlogPost-module--post--xDyMn\",\"rightNav\":\"BlogPost-module--rightNav--2zs5z\"};"],"sourceRoot":""}